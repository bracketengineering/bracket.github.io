AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for getAccountMeals

Parameters:
  CommitHash:
    Description: The commit hash for the Lambda deployment package
    Type: String
  Branch:
    Description: The branch for the Lambda deployment package
    Type: String
  APINAME:
    Description: The name of the API Gateway
    Type: String
    Default: "cookly-api"
  APIARN:
    Description: The ARN of the API Gateway
    Type: String
    Default: "arn:aws:execute-api:eu-west-2:065472310374:${APINAME}"
  APIENDPOINT:
    Description: The endpoint of the API Gateway
    Type: String
    Default: "get-account-meals"
  FunctionName:
    Description: The name of the Lambda function
    Type: String
    Default: "getAccountMeals"
  Feature:
    Description: The feature name
    Type: String
    Default: "accountPage"

  

Resources:
  function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref FunctionName
      Description: An AWS Lambda function that gets the meals for a user.
      CodeUri:
        Bucket: "cookly-deployment-builds"
        Key: !Sub "${Branch}/accountPage/getAccountMeals/${CommitHash}.zip"
      Role: arn:aws:iam::065472310374:role/cookly-lambda-neptune-get
      Handler: lambda_function.lambda_handler
      Runtime: nodejs18.x
      Timeout: 5
      MemorySize: 128
      Architectures:
        - "arm64"
      Layers:
        - arn:aws:lambda:eu-west-2:065472310374:layer:neptune-client:49
    
  version:
    Type: AWS::Lambda::Version
    DependsOn: function
    Properties:
      FunctionName: !Ref function
      Description: !Sub "Version for ${CommitHash}."
  
  alias:
    Type: AWS::Lambda::Alias
    DeletionPolicy: Retain
    Properties:
      FunctionName: !Ref function
      FunctionVersion: !GetAtt version.Version
      Name: "Production"
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 3

  apiResouce:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt MyApi.RootResourceId
      PathPart: !Ref APIENDPOINT # the endpoint in your API
      RestApiId: !Ref APIARN

  apiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId: !Ref apiResouce
      RestApiId: !Ref APIARN
      AuthorizationType: AWS_IAM
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${function.Arn}/invocations
      MethodResponses:
        - StatusCode: "200"
        - StatusCode: "400"
        - StatusCode: "500"

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref function
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${APINAME}/*/POST/${APIENDPOINT}